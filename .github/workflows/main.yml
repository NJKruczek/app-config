name: main

on:
  push:
    branches: '*'

jobs:
  # for branches, we only need to check Linux + Node LTS
  # note that we do linting here, but not on Windows / MacOS (no need to)
  linux-and-lts:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - id: yarn-cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
    - run: yarn install
    - run: yarn build
    - run: yarn lint
    - run: yarn test --coverage
      env: { CI: 1 }
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./app-config/coverage/clover.xml,./app-config-inject/coverage/clover.xml,./app-config-webpack-plugin/coverage/clover.xml
        fail_ci_if_error: true
        verbose: true

  # for master, we test Linux & Windows & MacOS + Node LTS & Latest
  # note that we don't do linting here, only on Linux + Node LTS (above)
  all:
    if: github.ref == 'refs/heads/master'

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node-version: [10.x, 12.x, 14.x, 15.x]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - id: yarn-cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
    - run: yarn install
    - run: yarn build
    - run: yarn test --testTimeout 20000
      env: { CI: 1 }

  cypress:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - id: yarn-cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-yarn-
    - run: yarn install
    - run: yarn build
    - uses: cypress-io/github-action@v2
      with:
        working-directory: examples/frontend-webpack-project
        start: yarn serve -l 8080 ./dist
        wait-on: 'http://localhost:8080'
        record: true
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
